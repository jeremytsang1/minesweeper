#+OPTIONS: toc:nil num:nil tasks:nil ^:nil tags:nil
#+TITLE: HW 8: Portfolio Project
#+AUTHOR: Jeremy Tsang
#+LATEX_HEADER: \usepackage[margin={0.5in, 1in}]{geometry}
#+LATEX_HEADER: \usepackage{indentfirst}
# #+LATEX: \setlength\parindent{0pt}  # no indentations
* The Problem
In Minesweeper a player is given board of $m$ rows and $n$ columns with $k < m\cdot n$ mines. The goal is for the player to open all cells that do not contain a mine.
* Decision Question
From Kaye (Springer-Verlag New York, Volume 22, Number 2, 2000) the decision problem is: "Given an arbitrary set of mines and numbers on a rectangular grid, can mines be placed consistently, following the usual minesweeper rules?"

This problem is NP-complete. A proof by Kaye is given in the aforementioned paper where he goes on to show that SAT can reduce to the Minesweeper problem. He goes to show that one can construct the basic logic gates AND, OR, and NOT (and therefore an entire computer) using regions of a Minesweeper board to model a wire carrying voltage. This can be done by assigning a "direction" to the region where the unopened cells are the digital logical inputs. Hence, by strategically placing the unopened cells it is possible recover the inputs of SAT.
* WAIT The Verification Algorithm
We can show that the Minesweeper problem in NP by providing a polynomial time verification algorithm. Consider
Take the certificate to be a binary string made of $m \cdot n$ bits. Each bit represents a cell on the board. The value of the bits describe whether or not it's corresponding cell was opened (bit has value 1) or not left closed (bit has value 0).

Given a binary string as described above

* Analysis Verification Algorithm's Time Complexity
